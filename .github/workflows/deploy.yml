name: CI/CD with Stage and Production

on:
  push:
    branches: [master] 
  workflow_dispatch:

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build Docker image with Compose
      run: docker compose build
    
    - name: Push Docker image with Compose
      run: docker compose push

  deploy-stage:
    needs: build-and-push-images
    if: github.ref == 'refs/heads/master'
    environment: stage
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create .env file
      run: |
        cat > .env <<EOF
        POSTGRES_DB=${{ vars.POSTGRES_DB }}
        POSTGRES_HOST=${{ vars.POSTGRES_HOST }}
        POSTGRES_PORT=${{ vars.POSTGRES_PORT }}
        POSTGRES_USER=${{ vars.POSTGRES_USER }}
        POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_MIN_CONN=${{ vars.POSTGRES_MIN_CONN }}
        POSTGRES_MAX_CONN=${{ vars.POSTGRES_MAX_CONN }}
        API_KEY=${{ secrets.API_KEY }}
        APP_HOST=${{ vars.APP_HOST }}
        APP_PORT=${{ vars.APP_PORT }}
        APP_WORKERS=${{ vars.APP_WORKERS }}
        CRYPTO_PASS=${{ secrets.CRYPTO_PASS }}
        REDIS_HOST=${{ vars.REDIS_HOST }}
        REDIS_PORT=${{ vars.REDIS_PORT }}
        PGADMIN_DEFAULT_PASSWORD=${{ secrets.PGADMIN_DEFAULT_PASSWORD }}
        PGADMIN_DEFAULT_EMAIL=${{ vars.PGADMIN_DEFAULT_EMAIL }}
        PGADMIN_PORT=${{ vars.PGADMIN_PORT }}
        EOF

    - name: Ensure target directory exists
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          mkdir -p /var/www/ddoaudit-stage.com/app/

    - name: Copy docker-compose.yml to server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        source: "./docker-compose.yml"
        target: "/var/www/ddoaudit-stage.com/app/"
    
    - name: Copy .env to server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        source: "./.env"
        target: "/var/www/ddoaudit-stage.com/app/"

    - name: Deploy to Stage
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd /var/www/ddoaudit-stage.com/app
          docker compose -p ddoaudit-stage pull
          docker compose -p ddoaudit-stage up -d
    
    - name: Prune unused Docker images
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          docker image prune -af

  deploy-prod:
    needs: deploy-stage
    if: github.event_name == 'workflow_dispatch'
    environment: production
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Create .env file
      run: |
        cat > .env <<EOF
        POSTGRES_DB=${{ vars.POSTGRES_DB }}
        POSTGRES_HOST=${{ vars.POSTGRES_HOST }}
        POSTGRES_PORT=${{ vars.POSTGRES_PORT }}
        POSTGRES_USER=${{ vars.POSTGRES_USER }}
        POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_MIN_CONN=${{ vars.POSTGRES_MIN_CONN }}
        POSTGRES_MAX_CONN=${{ vars.POSTGRES_MAX_CONN }}
        API_KEY=${{ secrets.API_KEY }}
        APP_HOST=${{ vars.APP_HOST }}
        APP_PORT=${{ vars.APP_PORT }}
        APP_WORKERS=${{ vars.APP_WORKERS }}
        CRYPTO_PASS=${{ secrets.CRYPTO_PASS }}
        REDIS_HOST=${{ vars.REDIS_HOST }}
        REDIS_PORT=${{ vars.REDIS_PORT }}
        PGADMIN_DEFAULT_PASSWORD=${{ secrets.PGADMIN_DEFAULT_PASSWORD }}
        PGADMIN_DEFAULT_EMAIL=${{ vars.PGADMIN_DEFAULT_EMAIL }}
        PGADMIN_PORT=${{ vars.PGADMIN_PORT }}
        EOF

    - name: Ensure target directory exists
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          mkdir -p /var/www/ddoaudit.com/app/

    - name: Copy docker-compose.yml to server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        source: "./docker-compose.yml"
        target: "/var/www/ddoaudit.com/app/"
    
    - name: Copy .env to server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        source: "./.env"
        target: "/var/www/ddoaudit.com/app/"

    - name: Deploy to Production
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd /var/www/ddoaudit.com/app
          docker compose -p ddoaudit pull
          docker compose -p ddoaudit up -d
    
    - name: Prune unused Docker images
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          docker image prune -af
