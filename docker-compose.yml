services:
  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    image: clemeit/ddoaudit-postgres:latest
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - backend
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "pgadmin", "-d", "ddoaudit" ]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 60s

  redis:
    build:
      context: ./redis
      dockerfile: Dockerfile
    image: clemeit/ddoaudit-redis:latest
    restart: always
    networks:
      - backend
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 2s
      timeout: 5s
      retries: 3
      start_period: 60s
    volumes:
      - redis_data:/data

  sanic:
    build:
      context: ./sanic
      dockerfile: Dockerfile
    image: clemeit/ddoaudit-sanic:latest
    restart: always
    environment:
      - API_KEY=${API_KEY}
      - APP_HOST=${APP_HOST}
      - APP_PORT=${APP_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_MIN_CONN=${POSTGRES_MIN_CONN}
      - POSTGRES_MAX_CONN=${POSTGRES_MAX_CONN}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - BETTERSTACK_SERVER_STATUS_KEY=${BETTERSTACK_SERVER_STATUS_KEY}
    expose:
      - 8000
    networks:
      - backend
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "python", "-c", "import urllib.request; exit(0) if urllib.request.urlopen('http://localhost:8000/health').status==200 else exit(1)" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 60s

  nginx:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    image: clemeit/ddoaudit-nginx:latest
    restart: always
    ports:
      - "${NGINX_HTTP_PORT}:80" # support http redirect
      - "${NGINX_HTTPS_PORT}:443"
    networks:
      - backend
    depends_on:
      - sanic
    volumes:
      - ${STATIC_FILES_PATH:-.}:/usr/share/nginx/html:ro
      - /var/www/ddoaudit.com/acme-challenge:/acme-challenge
      - /etc/letsencrypt:/etc/letsencrypt

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    networks:
      - backend
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin

networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:
