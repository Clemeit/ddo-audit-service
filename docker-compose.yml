services:
  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    image: clemeit/ddoaudit-postgres:latest
    container_name: ddoaudit_postgres
    restart: always
    networks:
      - backend
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "pgadmin", "-d", "ddoaudit"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 60s

  redis:
    build:
      context: ./redis
      dockerfile: Dockerfile
    image: clemeit/ddoaudit-redis:latest
    container_name: ddoaudit_redis
    restart: always
    networks:
      - backend
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 2s
      timeout: 5s
      retries: 3
      start_period: 60s
    volumes:
      - redis_data:/data

  sanic:
    build:
      context: ./sanic
      dockerfile: Dockerfile
    image: clemeit/ddoaudit-sanic:latest
    container_name: ddoaudit_sanic
    restart: always
    ports:
      - "${APP_PORT}:8000"
    expose:
      - 8000
    networks:
      - backend
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://api.localhost:8000/v1/health"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 60s

  nginx:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    image: clemeit/ddoaudit-nginx:latest
    container_name: ddoaudit_nginx
    restart: always
    ports:
      - "80:80" # support http redirect
      - "443:443"
    networks:
      - backend
    depends_on:
      - sanic
    volumes:
      - /var/www/ddoaudit-stage.com/html/client:/usr/share/nginx/html:ro
      - /etc/letsencrypt:/etc/letsencrypt

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - "${PGADMIN_PORT}:443"
    networks:
      - backend
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin

networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  pgadmin_data: